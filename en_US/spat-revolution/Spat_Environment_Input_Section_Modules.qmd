# Input Section

In this section we will discuss how to input audio streams into SPAT Revolution and how to transform them before mixing.

![](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Setup/InputModuleRow.png)

_SPAT Revolution_ itself does not play audio files. The input blocks are here to access to audio streams and process them in the _SPAT Revolution_ spatialization engine. Input blocks are represented at the top row of the signal graph.

There are two types of input blocks:

+ Hardware blocks, which look at signal coming from an actual audio interface,
+ Software blocks, which are tied to a SPAT Send plug-in instances in a DAW.

To create a hardware blocks, click one of the *+* button at the left of the row. To create a software block, instantiate a SPAT Send plug-in in a DAW and activate its local audio path. You will find more information on local audio path in the [8.5 Plug-ins: Local audio path](Ecosystem_&_integration_DAW_Automation_Local_Audio_Path.qmd) section.

## Input modules {#sec-input-modules}

### Name

Allows to edit the name of an input. It is possible to edit several names at once by selection several blocks and clicking on the "Input Name Wizard" button in the inspector.

![](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Setup/InputNameWizard.png)

### Inputs configuration

+ Input type : allow to select if the source of the signal is coming from the selected input or from the signal generator included in _SPAT Revolution_. The nature of the generated signal can be changed in the [Preferences page -@sec-application-preference].
+ Input stream : allow to select the stream type of the block.

:::{.callout-note}
Input stream types are : channel-based, HOA, A-Format, B-Format, UHJ, MS, Binaural and Transaural.
:::

For more options related to stream type, check the [Setup Page -@sec-setup-page] section.

:::{.callout-tip}
When selecting the *MS* stream type, you can tick the **encode** button to convert a stereo stream to MS. This allows you to use an MS-to-Stereo decoder to manipulate the mid and side components of the sound field.
:::

### Routing

Give access to the routing matrix

:::{.callout-warning}
 This option is only available on hardware input.
:::


### Setup

#### Delay

Each input comes with a delay which can be useful:

- in live situation, to compensate delay between microphones.
- in studio situation, to compensate the plugins delay when using Local Audio Path.

The delay can be set in samples, milliseconds, or distance unit (meters if metric system, feet otherwise). This can be chosen on the **Global** panel of the **Preferences** page.

#### Phase inversion

Inverts the polarity of the signal.

#### Levels

Basic true peak metering for each block's channels.

## Input Transcoders {#sec-input-transcoder-module}

_SPAT Revolution_ can handle many formats of multichannel audio throughout the signal flow, as we have been pointing out. As we approach the actual virtualisation of inputs into object-based audio sources in the SPAT _Virtual Rooms_ it may be necessary to change from the original input format to another. You use the Input Transcoder module and its parameters to do this.

![](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Education/InputTranscoding.png)


The transcoder modules may modify the channel count of the stream passing through it, depending on the format transfer being requested. For example, transcoding from Ambisonic B-Format into a Channel Based 3D Cube involves a four-channel Ambisonics stream getting transcoded into an eight-channel stream grouped and treated as a specific speaker configuration.

### Transcoding Matrix

![](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Setup/TranscoderMatrix.png)

In the case where an incoming Channel Based stream needs transcoding into an outgoing Channel Based stream which has fewer channels, the IO Matrix is used to remap the output format by dropping some input channels. This is not strictly _Transcoding_ or _decoding_ but is a useful tool to have in a certain format changing scenarios. This matrix does not give the possibility to up-mix or down mix. To properly up mix or down mix, it is advisable to use a room to take the virtual source of one format, and output with the desired end format.

### When to Transcode Inputs?

The main reason you will need to transcode inputs is when you are mixing and spatializing inputs in a _SPAT Revolution_ _Virtual Room_. This is because the _Virtual Room_ module requires incoming sources to be in a Channel Based format. Internally, the Room may well be panning in Channel based, Ambisonics or binaural format, but it always needs Channel Based streams as inputs. More about this in the _Virtual Room_ section. Format transcoding may not always need re-spatializing in a room. There are some contexts where you will not use a Virtual Room in the signal flow,

![](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Education/TranscodingExplained.png)

Here is an example of decoding an ambisonic signal using an input transcoder module. This could also be done in the master transcoder section of the graph.

As mentioned in @sec-scenebased-introAmbi, a decoding stage is absolutely necessary to render Ambisonics encoded audio to speakers. It can be done like this without the need of a room.


### Aggregation of input

As some DAW does not support multichannel tracks, _SPAT Revolution_ provides on the input transcoder a way to aggregate stereo or mono input in order to make multichannel sources.

To do it, connect several inputs on the same input transcoder or source and select on it the wanted format. When selecting it, a combobox "Aggregate Input" will appear, and will allow to aggregate all the inputs.

![Input aggregation](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Setup/InputAggregation.png)

:::{.callout-warning}
 The order of the channel is determined by the connection order to the input transcoder or source.
:::
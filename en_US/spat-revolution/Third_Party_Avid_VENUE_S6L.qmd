# Avid VENUE S6L

Spat Send is the only available plugin from FLUX:: Immersive for the _SPAT Revolution_ integration to **Avid VENUE S6L** platform.
The mono or stereo plugin instances provide the integration of the Spat source/object parameters into the channel strip (insertion on the channel for source parameter control, no audio processing).
This channel strip can be a pure input channel or an actual bus (aux, group) for working with stem objects.

The plugin offers the ability to control the Spat source/object parameters directly on encoder, and automate them within the VENUE show file and snapshot system. And ultimately, having a completely integrated control of the objects in the 3D space.
Added to the SPAT source/object parameters is a **time** value where the user can set a linear morphing between two parameter states over a time period to create smooth transitions, thus creating movements with interpolation time with the VENUE Snapshots.

New with version 20.12:

* Single X-Time (Interpolation) value for all parameters of PI
* X-Link allows to link all SPAT PI plugins interpolation time
* Page Table updated.
* Scale (for stereo) and LFE Send parameters were added.
* Communication improvements and optimization.


The OSC (Open Sound Control) part is the crucial aspect of this integration as when properly configured, the console will be sending OSC commands to _SPAT Revolution_ software engine (OSC Out) and receiving OSC commands into the S6L console (OSC In).
Thus, for a bidirectional configuration.
This is what the SPAT Send plugin does on the console.
Optionally, a second OSC output from the console can be enabled to send to a backup _SPAT Revolution_ computer engine (unidirectional).
The bidirectional aspect will mean that creating a sound scene in _SPAT Revolution_ interface (or from third-party interfaces) will automatically push the information to the plugin instances on the console.
Furthermore, the pushed data can be captured in a console snapshot.
The console PI snapshots can capture automation prepared in pre-production (third party like DAW or controllers).


![SPAT plug-in on S6L CKM module – Page 1 of 3](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LEncoders.png)
**SPAT plugin on S6L CKM module – Page 1 of 3**

The integration will ultimately include two parts: the control portion and the audio portion.
Our control will always be using OSC and will be communicating via either the ECx port of the console or via the AVB network interface (port C/D).
You can choose the network interface the control is flowing in.
The audio routing portion can take different scenarios.
An example could be using the AVB audio entity capability of the S6L system integrated into a Mac-qualified computer.
In this first case, audio and control will flow on the same network port (Port C/D on the console).
As this AVB is often used for other uses (virtual production), people will frequently rely on legacy MADI integration to leave the AVB entity dedicated to Recording and playback scenarios.
New scenarios will be possible shortly as the new Avid MLN-192 (Milan AVB) expansion card becomes available and qualified interfaces join the Milan party.
If the route of the MADI integration is taken, then control will happen from the EXc port on the console.
This makes it as well a cross-platform solution for Windows or Mac.



![Dual _SPAT Revolution_ integration to S6L via MADI](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LDualSpatRevolutionIntegrationS6LMadi.png)
**Dual _SPAT Revolution_ integration to S6L via MADI**


![_SPAT Revolution_ integration to S6L via the AVB port for audio and control](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LIntegrationAVB.png)
**_SPAT Revolution_ integration to S6L via the AVB port for audio and control**


## Configuring OSC

Now let’s look at configuring this integration's control (OSC).
The OSC settings (SPAT send plugin and _SPAT Revolution_) are specific to your console IP address and the _SPAT Revolution_ preferences.

![SPAT Send plugin in the Plugins rack of VENUE](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LPluginRack.png)
**SPAT Send plugin in the Plugins rack of VENUE**


![SPAT Send plugin setup](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LSend.png)
**SPAT Send plugin setup**


The PI interface doesn’t have much and is straightforward:

S6L doesn’t populate the track name when inserting it into a channel. That said, if you are connected to _SPAT Revolution_, changing the track name to your desired name will rename your source/object name in _SPAT Revolution_ software! Names are part of snapshots as well. The below SPAT / S6L templates have all the start naming set!

- Index refers to the object/source number in _SPAT Revolution_ application. This gets automatically generated every time a new instance of SPAT sends plugin is instantiated in the console plugin rack. Snapshots can change it, but it is unique, and no instance can take over a currently used index. As the Index number is part of snapshots, be careful not to change them after creating or using them.

- In IP: The pull-down menu will allow you to choose the ethernet interface with which you will be listening to OSC commands coming from _SPAT Revolution_. You will need this address for setting up SPAT preference later. This can be the AVB port ```169.254.x.x```, or your ECx port network interface of the console, depending on the integration route. In the above example, the ECx interface with IP ```192.168.1.203``` is chosen.


- In Port#: This port ```#9101``` is already set for you and matches the corresponding Port# used by the _SPAT Revolution_ OSC preferences / Avid S6L preset. It can be left to default unless it conflicting with other OSC traffic.

- Out IP: This IP address is the manual address (above example ```192.168.1.201```) in which your Primary _SPAT Revolution_ computer is configured.

- Out Port#: This port ```#9100``` is already set for you and matches the corresponding Port# used by the _SPAT Revolution_ OSC preferences / Avid S6L preset. It can be left to default unless it conflicting with other OSC traffic.

- OSC second output activates OSC messages to a second SPAT computer (such as your backup/ redundant computer engine). Output IP is the destination IP, so it is the IP of the second SPAT computer. The same port# as the primary is already set for you and matches the corresponding Port# used by the _SPAT Revolution_ OSC preferences / Avid S6L preset. Note that the backup computer is not bidirectional to S6L and will only receive messages. So, the SPAT Primary computer is the one that is bi-directional (so updating plugins live with movements so you can take a snapshot of it).

:::{.callout-note}
Note that any changes you make to properties to the SPAT Send interface get done across the board (across all PI instances, except the unique index).
:::

## Setting the preferences of the SPAT Revolution Application

Let’s now setup your preferences on _SPAT Revolution_ preferences page:

- Hit preference in the top right corner. Look for the OSC Main section. First, you want to make sure the checkbox OSC Enable is engaged.

**SPAT OSC Main Preferences**

![SPAT OSC Main preferences](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Preference/OSCMain.png)

<!-- TODO: update this image -->


- In the OSC Connections section, you will see 8 OSC connection slots. Set one connection to Input Avid S6L and one to Output Avid S6L. We will use two slots for this. The output will be to go to S6L SPAT Send Plugin; the input will be to listen to S6L in _SPAT Revolution_.

**SPAT OSC Connections Matrix**

![SPAT OSC Connections Matrix](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LOSCConnectionMatrixInput.png)

![SPAT OSC Connections Matrix](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LOSCConnectionMatrixOutput.png)

### SPAT OSC Connections preferences

- Set the In IP address by pulling then the menu and choosing the network interface of your SPAT engine computer (for example, the ```192.168.0.201``` of whatever network interface/IP you are using for this communication as long as it is in the same network range as the console IP address).

- The input side (receiving the OSC parameters from the Out IP of the console) doesn't need anything specific as the OSC input is ready for Avid S6L. You simply need to choose the **Input | Avid S6L** preset. As mentioned above, in the S6L setup, the port # is predefined to port ```#9100``` on both sides (PI and SPAT OSC preset for S6L).

- On the OSC output connection, you will simply need to choose the **Output | Avid S6L** preset and put the destination IP of the console, see above 192.168.1.203. The port # is already predefined (9101) and matches the Avid SPAT Send PI Input. Port ```#9101```. This IP address is the IP address found in the PI interface (usually the ECx port IP setting). The default output option checkboxes are set with the preset for S6L.


:::{.callout-note}
If desired, the OSC Log can be seen for testing. In the SPAT OSC Main section, you can use the ```Enable commands logs``` option to confirm OSC communication. Pressing ```Shift + F7``` or going to the help menu of SPAT will give you the option for a mini log window to see if the traffic is flowing as you move a source either in SPAT software or on the parameters on the PI encoders. It is not recommended to leave command logs enabled past the confirmation testing step. This will ensure that you don’t take up resources.
:::

## Configuring Audio Connections ##

Let’s now look for the  Hardware I/O connection. This is where you will configure the hardware input and output (audio interface) for _SPAT Revolution_.

**SPAT Hardware IO (Audio) preferences – AVB example**
![SPAT Hardware IO (Audio) preferences – AVB example](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/ThirdParty/S6LHardwareIOAVB.png)

<!-- TODO: update the image -->

- In Devices, please select your Core or ASIO audio device. In this example, we are using the AVB Core Audio E6 Engine, but this could also be your MADI interface of choice, such as an RME MADIface, MADIface XT, Soundgrid MADI device, or any preferred interface. Not that the choice of interface will impact your overall possible system latency combined with the computer hardware.

The sample rate should be set at 96000 Hz (unless the sample rate converts from the S6L to 48K), and the buffer can be set to your desired buffer (mind lower buffer requires a qualified computer and optimized resource).

*Congratulations, you are done! You're ready to go to the setup page in SPAT and configure your Spatial audio system.*

## Templates

As of _SPAT Revolution_ version 20.12.0, we provide our users with three different start templates to help them build their session or simply review an example of _SPAT Revolution_ integration.
Our latest release has updated them, built with S6L v6.3 and qualified/tested for S6L V7.

>**To note** that show files built with SPAT Send version 48020 or 48049 can't use SPAT Send 20.12.0. Version 48049 is the version to use for these older showfiles. That said, _SPAT Revolution_ 20.12 release works well with these older sessions (nothing prevents a user from updating to the latest _SPAT Revolution_ just keeping the old SPAT Send version for show file (snapshot) compatibility.


[SPAT_S6L_V7_64MONO_20_12](https://public.3.basecamp.com/p/2WqGPJ4ner3k3No1AtbYB6Gw)

**SPAT_S6L_V7_64MONO_20_12** is the exact same template file we provided before.
For the model, all channels are being sent to the spatial renderers.
Channel 1-64 have a SPAT instance inserted, and its direct out post-fader signal is assigned to MADI card 1, 1-64, and in parallel connected to the PTAVB entity channel 65-128 (for alternative routing that some have used).
MADI 1-2 is patched to Stereo channel 65 as a means of returning the binaural room (and headphone mix) coming from the SPAT template session (.JSON file).
The S6L file contains three snapshots:
- **Reset all**, resetting all sources to default position without reverb (acoustic simulation) and two other test snapshots called
- **Circle and Horizontal Line**. Plugins are set with a 2 second interpolation time, showing how time value is used to smooth out transitions. The accompanying SPAT session file contains the 64 sources/objects connected to a Binaural Room as a starting point.


[SPAT_S6L_V7_32MONO_16ST GROUPS_20_12](https://public.3.basecamp.com/p/UQU8nhgHxy3FUjVgPndb8baK)

**SPAT_S6L_V7_32MONO_16ST GROUPS_20_12** contains an S6L file with 32 Mono SPAT send sources/objects ready to be inserted on the channels you are using as direct out to _SPAT Revolution_.
These are name source/object 1-32.
The file is all well-ready with 16 Stereo groups for your source/object stems (33-48). Two test snapshots are preconfigured to **reset all source positions** and one as a snapshot test recalling all sources in a **horizontal line**.
Plugins are set with a 2-second interpolation time, showing how time value is used to smooth out transitions.
The accompanying SPAT session file contains the 48 sources (32 mono and 16 stereos) connected to a Binaural Room as a starting point (it's a 64-channel audio setup).
The audio routing is not applied yet on this file, but the post-fader pick-off point option is set to be ready to route direct-out post-fader out of the channels.

[SPAT_S6L_V7_8MONO_8ST GROUPS_20_12](https://public.3.basecamp.com/p/EjezQzaYqtVWuwiqqZrJzNPd)

**SPAT_S6L_V7_8MONO_8ST GROUPS_20_12** is a basic entry S6L file with eight mono SPAT send objects ready to be inserted on the channels you are using as direct out to SPAT.
These are source/object 1-8. The file is all well-ready with 8 Stereo groups for your source/object stems (9-16). Two test snapshots are preconfigured to **reset all source positions** and one as a snapshot test recalling all sources in a **horizontal line**.
Plugins are set with a 2-second interpolation time, showing how time value is used to smooth out transitions.
The accompanying SPAT session file contains the 16 sources (8 mono and eight stereos) connected to a Binaural Room as a starting point (it's a 24-channel audio setup).
The audio routing is not applied yet on this file, but the fader pick-off point option is set to be ready to route direct-out post-fader out of the channels.
# SPAT Environment

This section will go through the _SPAT Revolution_ software environment in more detail. We will step through each of the main Graphic Editor views.

![](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Education/Environment.png)

<!-- ## General concept

We have already discussed the idea that SPAT Revolution is an object-based mixing engine. This has two important consequences:

+ The mixing operation is entirely decorrelated to the target diffusion system (headphones, ambisonic dome, Dolby Atmos beds 7.1.4, etc.).
+ From the point of view of the user interface, audio channels are not represented as tracks, but as sound sources living in a virtual space.

This last sentence says a lot about the workflow of SPAT Revolution. Our mix will take place inside sound sources (thanks to their various parameters such as azimuth, elevation, distance, etc.) and we will use the virtual room to render this virtual sound scene.

Rendering a sound scene means that we need to know what the playback system is. Is it headphones? Is it some kind of loudspeaker array? To specify what kind of loudspeaker array it is, SPAT integrates a loudspeaker configuration tool that allows the user to either use a standardised (or very common) loudspeaker layout, or to create a very unique one, corresponding to the loudspeaker placement in a concert hall.

Last but not least, virtual room also means acoustic simulation, so every aspect of sound localisation is covered by the SPAT Revolution engine.

Perhaps a brief metaphor will help here. If we were talking about written music, the source parameters would be the score. It represents how the music should be played. The loudspeaker configuration would be very much like the orchestra you are recruiting to play the score: is it a small ensemble or not? Does it cover the whole family of musical instruments? In this case, trying to place a sound behind you while mixing on a stereo system would be very similar to asking a percussionist to play a flute part because the ensemble has not hired a flute. Finally, the virtual space will most likely be the conductor. He will choose a way to manage the ensemble he is working with and find a way to get the most out of it in terms of the instructions given by the score. -->

<!-- 
**Rendering to Speakers**

In order for the virtual scene to translate correctly as an immersive sound experience in a speaker format, SPAT needs to have an accurate model of a _multichannel speaker arrangement_ which will be used to map the multichannel information to the destination speakers and render the sound field correctly in a real space.
To this end, you will find a large library of standard and specialized speaker arrangements already built into SPAT which can be used in various places throughout the **Environment Setup**.

Speaker configurations can be used to fit the format of a virtual room to match the actual speaker system being used to diffuse the mix in a real room.
Channel based speaker configurations can also be used to transcode the format of a virtual source into a virtual room.
More about this later.

The golden rule when working with multichannel based audio is that you must be sure to choose _exactly_ the right formats, speaker arrangements and channel routing throughout; otherwise the virtual space will not map correctly into a physical space.

**Virtual and Real Diffusion**

Successful diffusion of a sound field in space relies on every loudspeaker being assigned correctly to each software rendered output channels.

A diffusion system could range from a simple pair of headphones to a 18 (**Essential**) or unlimited (**Ultimate**) speakers array and anything in between.
In some of the more virtualized workflows of _SPAT Revolution_, you may even be thinking about diffusion in a virtual space on configurations of virtual speaker arrangements and channel based formats.
The same rule for successful diffusion applies hereâ€”the diffusion in the virtual room will be compromised and sound off if the channel assignments to the virtual systems are incorrect.

![](https://media.githubusercontent.com/media/FLUX-SE/doc_images/main/SpatR/Room/3DViewMultichannelSources.png)

In the above illustration, a virtual 5.1 and a virtual Cube arrangement exist together in a High Order Ambisonic Room, which may eventually be rendered to some other channel based end format. -->
